---
- hosts: primary
  tasks:
    - name: Gather needed facts
      setup:
        gather_subset: "!min,user_dir,distribution"
      when:
        - ansible_user_dir is not defined
        - ansible_distribution is not defined
    - name: Check if pip is installed
      shell: command -v pip > /dev/null 2>&1
      ignore_errors: true
      changed_when: false
      register: pip_exists

    - when: pip_exists.rc != 0
      name: Install pip
      block:
        - when: ansible_distribution == "CentOS"
          name: Install EPEL
          become: true
          package:
            name: epel-release
        - name: Install package dependencies
          become: true
          package:
            name:
              - python-pip

    - name: Install docker-ce
      become: true
      block:
        - name: Ensure old versions of Docker are not installed.
          package:
            name:
              - docker
              - docker-common
              - docker-engine
            state: absent

        - name: Add Docker GPG key.
          rpm_key:
            key: https://download.docker.com/linux/centos/gpg
            state: present

        - name: Add Docker repository.
          get_url:
            url: |
              https://download.docker.com/linux/{{
              (ansible_distribution == "Fedora") |
              ternary("fedora","centos") }}/docker-ce.repo
            dest: '/etc/yum.repos.d/docker-ce.repo'
            owner: root
            group: root
            mode: 0644

        - name: Install Docker.
          package:
            name: docker-ce
            state: present

    - name: Install python dependencies
      pip:
        name:
          - ansible==2.7.5
          - openstacksdk==0.13.0
          - docker==3.6.0
          - docker-compose==1.23.2
        extra_args: --user

    - name: Find out docker group name
      shell: grep docker /etc/group | cut -d":" -f1 | head -1
      register: docker_group
      changed_when: false

    - when: docker_group.stdout == ""
      block:
        - name: Create docker group
          become: true
          group:
            name: docker
            state: present
        - name: Storing new created docker group
          set_fact:
            docker_group:
              stdout: docker

    - name: Check if user is in docker group
      command: "groups {{ ansible_user }}"
      register: user_groups
      changed_when: false

    - when: "docker_group.stdout not in user_groups.stdout"
      block:
        - name: Add user to docker group
          become: true
          user:
            name: '{{ ansible_user }}'
            groups: '{{ docker_group.stdout }}'
            append: true
          register: groupadd

    - name: reset ssh connection to allow user changes to affect
      meta: reset_connection

    - name: Start and enable docker
      become: true
      service:
        name: docker
        state: started
        enabled: true
