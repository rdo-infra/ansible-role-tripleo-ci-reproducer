---

# Zuul executor has some limitations that prevents from running the role
# directly there so we have to generate a playbook and run it at the
# node

- hosts: primary
  vars:
    repro_role_path: >-
      {{ ansible_user_dir }}/{{ zuul.projects[
        'review.rdoproject.org/rdo-infra/ansible-role-tripleo-ci-reproducer'
        ].src_dir }}
  tasks:

    - name: Set facts for mirrors
      set_fact:
        mirror_fqdn: "mirror.{{ nodepool.region | lower }}.{{nodepool.cloud | lower }}.rdoproject.org"
    - name: Use RDO container registry at RDO cloud
      become: true
      ini_file:
        path: /etc/containers/registries.conf
        section: registries.search
        option: registries
        value: ["{{ mirror_fqdn }}"]
        backup: true
      when: "'rdo-cloud' in nodepool.cloud"
    - name: Create roles directory
      file:
        path: "{{ ansible_user_dir }}/roles"
        state: directory
    - name: Link role
      file:
        src: "{{ repro_role_path }}"
        dest: "{{ ansible_user_dir }}/roles/tripleo-ci-reproducer"
        state: link
    - name: Generate reproducer playbook
      template:
        src: run.yaml.j2
        dest: "{{ ansible_user_dir }}/start.yaml"
    - name: Load variables from defaults of tripleo-ci-reproducer
      include_vars: "ci_jobs_config.yaml"
    - name: Generate jobs config
      blockinfile:
        content: |
          {{ ci_jobs_config[ci_job]|to_nice_yaml }}
        path: "{{ ansible_user_dir }}/ci-job.yaml"
        create: true
    - name: Prepare zuul variables from job context
      set_fact:
        zuul_config:
          zuul: "{{ zuul }}"
    - name: Pass zuul variables
      blockinfile:
        content: |
          {{ zuul_config|to_nice_yaml }}
        path: "{{ ansible_user_dir }}/zuul_vars.yaml"
        create: true
    - name: Generate run script
      template:
        src: run.sh.j2
        dest: "{{ ansible_user_dir }}/run.sh"
        mode: 0755
    - name: Run reproducer
      command: "{{ ansible_user_dir }}/run.sh"
      changed_when: true
