---
- name: Install reproducer
  copy:
    src: "{{ item }}"
    dest: "{{ install_path }}"
  with_items:
    - playbooks
    - projects
    - httpd.conf

- name: Generate docker compose config
  template:
    src: docker-compose.yaml.j2
    dest: "{{ install_path }}/docker-compose.yaml"

- name: Create directories
  file:
    name: "{{ install_path }}/{{ item }}"
    state: directory
  with_items:
    - etc_nodepool
    - etc_zuul
    - zuul
    - certs

- name: Create log directory
  file:
    name: "{{ install_path }}/logs"
    state: directory
    mode: 0777

- name: Ensure cloud config dir
  file:
    name: "{{ ansible_user_dir }}/.config/openstack"
    state: directory

- name: Generate zuul configuration
  template:
    src: "{{ item }}.j2"
    dest: "{{ install_path }}/etc_zuul/{{ item }}"
  with_items:
    - zuul.conf
    - main.yaml
    - scheduler-logging.yaml
    - executor-logging.yaml
    - fingergw-logging.yaml
    - web-logging.yaml
    - merger-logging.yaml
    - zoo.cfg

- name: Generate secrets.env
  vars:
    id_rsa_b64: "{{ lookup('file', ssh_path + '/' +
      user_pri_key) | b64encode }}"
    upstream_gerrit_key_b64: "{{ lookup('file', ssh_path + '/' +
      upstream_gerrit_key) | b64encode }}"
    rdo_gerrit_key_b64: "{{ lookup('file', ssh_path + '/' +
      rdo_gerrit_key) | b64encode }}"
  template:
    src: secrets.env.j2
    dest: "{{ install_path }}/secrets.env"
    mode: 0600

- name: Generate secrets.yaml configmap
  vars:
    id_rsa_b64: "{{ lookup('file', ssh_path + '/' +
      user_pri_key) | b64encode }}"
    upstream_gerrit_key_b64: "{{ lookup('file', ssh_path + '/' +
      upstream_gerrit_key) | b64encode }}"
    rdo_gerrit_key_b64: "{{ lookup('file', ssh_path + '/' +
      rdo_gerrit_key) | b64encode }}"
  template:
    src: secrets.yaml.j2
    dest: "{{ install_path }}/secrets.yaml"
    mode: 0600

- name: Make path for pki ca-bundle.crt
  file:
    path: "{{ install_path }}/etc/pki/tls/certs"
    state: directory

- name: Install pki
  copy:
    src: /etc/pki/tls/certs/ca-bundle.crt
    dest: "{{ install_path }}/etc/pki/tls/certs/ca-bundle.crt"

- name: Checkout Zuul repository
  git:
    repo: 'https://opendev.org/zuul/zuul.git'
    dest: "{{ install_path }}/zuul"

- name: Generate ZK certificates
  shell: "./zk-ca.sh {{ install_path }}/certs zk"
  changed_when: true
  args:
    chdir: "{{ install_path }}/zuul/tools"

- name: Create reproducer control script
  template:
    src: tripleo-ci-reproducer.sh.j2
    dest: "{{ install_path }}/tripleo-ci-reproducer.sh"
    mode: 0770

- name: Create reproducer kube YAML
  template:
    src: tripleo-reproducer.yaml.j2
    dest: "{{ install_path }}/tripleo-reproducer.yaml"
    mode: 0770

- name: Setup nodepool provider
  include_tasks: "{{ nodepool_provider }}/main.yaml"
  when:
    - nodepool_provider != "host"
    - setup_nodepool|bool
    - job.setup_nodepool|default(setup_nodepool)|bool

- name: Generate nodepool main configuration
  template:
    src: "nodepool-{{ nodepool_provider }}.yaml.j2"
    dest: "{{ install_path }}/etc_nodepool/nodepool.yaml"

- name: Generate nodepool logs configuration
  template:
    src: "launcher-logging.yaml.j2"
    dest: "{{ install_path }}/etc_nodepool/launcher-logging.yaml"
