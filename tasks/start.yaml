---
- when: container_mode == 'docker'
  block:
    - name: Start docker
      service:
        name: docker
        state: started

    # ansible module does not support removal of anon volumes at restart
    # so we do a stop/start
    #
    - name: Stop up zuul and friends
      docker_service:
        project_src: "{{ install_path }}"
        state: absent
        remove_volumes: true
    - name: Start up zuul and friends
      docker_service:
        project_src: "{{ install_path }}"
        state: present
        pull: "{{ pull | default(false) | bool }}"

- when: container_mode == 'podman'
  block:
    - name: Stop up zuul and friends with podman
      become: true
      command: "{{ install_path }}/tripleo-ci-reproducer.sh --stop"
      ignore_errors: true

    - name: Start podman pod
      become: true
      command: "{{ install_path }}/tripleo-ci-reproducer.sh --run"

- name: Wait for zuul tenant
  uri:
    url: "http://localhost:9000/api/tenant/tripleo-ci-reproducer/status"
    method: GET
    return_content: true
    status_code: 200
    body_format: json
  register: result
  retries: 60
  delay: 10
  until: result.status == 200 and result.json["zuul_version"] is defined
  changed_when: false

- name: Check that all services are with correct state
  shell: |
    export PATH=~/.local/bin/:$PATH
    ! docker-compose ps |grep -v gerritconfig |grep ' Exit '
    docker-compose ps |grep gerritconfig |grep ' Exit 0 '
  args:
    chdir: "{{ install_path }}"
  changed_when: false
  when: container_mode == 'docker'

- name: Check that all services are with correct state
  shell: |
    ! podman ps | grep -v gerritconfig | grep ' exited '
    podman ps -a |grep gerritconfig |grep ' Exited (0) '
  args:
    chdir: "{{ install_path }}"
  become: true
  changed_when: false
  when: container_mode == 'podman'

- name: Check we have nodes to run jobs on
  when: nodepool_provider != "openstack"
  block:
    - name: Get node list from nodepool
      uri:
        url: "http://localhost:8005/node-list"
        method: GET
        return_content: true
        status_code: 200
        body_format: json
        headers:
          Accept: "application/json"
      register: node_list
      changed_when: false
    - fail:
        msg: "There is no node to run jobs"
      when: node_list.json |length == 0
    - fail:
        msg: "The nodes are not ready"
      when: item.state != "ready"
      with_items: "{{ node_list.json | list }}"
- name: Show banner
  vars:
    banner: |
      Now a local openstack tripleo ci environment has being installed at this
      system to use it you can acces to the following links and use it as a
      normal zuul + gerrit system.

      Gerrit: http://localhost:8080
      Zuul: http://localhost:9000
      Docker compose: {{ install_path }}

      To trigger jobs:
        - git clone http://localhost:8080/test1
        - Add a zuul.yaml with content like this:
          - project:
              check:
                jobs:
                  - tripleo-ci-centos-7-scenario002-standalone
        - git review it

      You can also comment with 'recheck' at local gerrit to spin a job
      already commited

  debug:
    msg: "{{ banner.split('\n') }}"
